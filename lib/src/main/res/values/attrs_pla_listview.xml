<?xml version="1.0" encoding="utf-8"?>
<resources>
    <!-- PLA_ListView -->
    <attr name="absListViewStyle" format="reference"/>
    <attr name="listViewStyle" format="reference"/>

    <declare-styleable name="AbsListView">

        <!-- Drawable used to indicate the currently selected item in the list. -->
        <attr name="listSelector" format="color|reference"/>
        <!--
             When set to true, the selector will be drawn over the selected item.
             Otherwise the selector is drawn behind the selected item. The default
             value is false.
        -->
        <attr name="drawSelectorOnTop" format="boolean"/>
        <!-- Used by ListView and GridView to stack their content from the bottom. -->
        <attr name="stackFromBottom" format="boolean"/>
        <!--
             When set to true, the list uses a drawing cache during scrolling.
             This makes the rendering faster but uses more memory. The default
             value is true.
        -->
        <attr name="scrollingCache" format="boolean"/>
        <!--
             When set to true, the list will filter results as the user types. The
             List's adapter must support the Filterable interface for this to work.
        -->
        <attr name="textFilterEnabled" format="boolean"/>
        <!--
             Sets the transcript mode for the list. In transcript mode, the list
             scrolls to the bottom to make new items visible when they are added.
        -->
        <attr name="transcriptMode">

            <!-- Disables transcript mode. This is the default value. -->
            <enum name="disabled" value="0"/>
            <!--
                 The list will automatically scroll to the bottom when
                 a data set change notification is received and only if the last item is
                 already visible on screen.
            -->
            <enum name="normal" value="1"/>
            <!--
                 The list will automatically scroll to the bottom, no matter what items
                 are currently visible.
            -->
            <enum name="alwaysScroll" value="2"/>
        </attr>
        <!--
             Indicates that this list will always be drawn on top of solid, single-color
             opaque background. This allows the list to optimize drawing.
        -->
        <attr name="cacheColorHint" format="color"/>
        <!--
             Enables the fast scroll thumb that can be dragged to quickly scroll through
             the list.
        -->
        <attr name="fastScrollEnabled" format="boolean"/>
        <!--
             When set to true, the list will use a more refined calculation
             method based on the pixels height of the items visible on screen. This
             property is set to true by default but should be set to false if your adapter
             will display items of varying heights. When this property is set to true and
             your adapter displays items of varying heights, the scrollbar thumb will
             change size as the user scrolls through the list. When set to fale, the list
             will use only the number of items in the adapter and the number of items visible
             on screen to determine the scrollbar's properties.
        -->
        <attr name="smoothScrollbar" format="boolean"/>
        <!--
             Defines the choice behavior for the view. By default, lists do not have
             any choice behavior. By setting the choiceMode to singleChoice, the list
             allows up to one item to be in a chosen state. By setting the choiceMode to
             multipleChoice, the list allows any number of items to be chosen.
             Finally, by setting the choiceMode to multipleChoiceModal the list allows
             any number of items to be chosen in a special selection mode.
             The application will supply a
             {@link android.widget.AbsListView.MultiChoiceModeListener} using
             {@link android.widget.AbsListView#setMultiChoiceModeListener} to control the
             selection mode. This uses the {@link android.view.ActionMode} API.
        -->
        <attr name="choiceMode">

            <!-- Normal list that does not indicate choices. -->
            <enum name="none" value="0"/>
            <!-- The list allows up to one choice. -->
            <enum name="singleChoice" value="1"/>
            <!-- The list allows multiple choices. -->
            <enum name="multipleChoice" value="2"/>
            <!-- The list allows multiple choices in a custom selection mode. -->
            <enum name="multipleChoiceModal" value="3"/>
        </attr>

        <!--
             When set to true, the list will always show the fast scroll interface.
             This setting implies fastScrollEnabled.
        -->
        <attr name="fastScrollAlwaysVisible" format="boolean"/>
    </declare-styleable>

    <declare-styleable name="ListView">

        <!-- Drawable or color to draw between list items. -->
        <!-- <attr name="divider" format="reference|color" /> -->
        <!--
             Height of the divider. Will use the intrinsic height of the divider if this
             is not specified.
        -->
        <attr name="dividerHeight" format="dimension"/>
        <!--
             When set to false, the ListView will not draw the divider after each header view.
             The default value is true.
        -->
        <attr name="headerDividersEnabled" format="boolean"/>
        <!--
             When set to false, the ListView will not draw the divider before each footer view.
             The default value is true.
        -->
        <attr name="footerDividersEnabled" format="boolean"/>
        <!-- Drawable to draw above list content. -->
        <attr name="overScrollHeader" format="reference|color"/>
        <!-- Drawable to draw below list content. -->

        <attr name="overScrollFooter" format="reference|color"/>

        <attr name="plaContentBackground" format="color"/>
    </declare-styleable>

    <declare-styleable name="PLAMultiColumnListView">
        <attr name="plaColumnNumber" format="integer"/>
        <attr name="plaLandscapeColumnNumber" format="integer"/>
        <attr name="plaColumnPaddingLeft" format="dimension"/>
        <attr name="plaColumnPaddingRight" format="dimension"/>
    </declare-styleable>
</resources>